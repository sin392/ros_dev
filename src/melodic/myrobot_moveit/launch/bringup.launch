<launch>
    <arg name="robot_name" default="myrobot" />
    <arg name="urdf_path" value="$(find myrobot_description)/urdf/$(arg robot_name)_v2.urdf.xacro" />
    <arg name="world_path" default="$(find myrobot_description)/world/container_cabbage_20.world" />

    <arg name="sim" default="true" />
    <arg name="ip_address_cart" default="192.168.11.100" />
    <arg name="ip_address_right" default="192.168.11.101" />
    <arg name="ip_address_left" default="192.168.11.102" />

    <arg name="use_camera" default="true" />
    <!-- left -->
    <arg name="camera_serial_no_1" default="032622073208" />
    <!-- right -->
    <arg name="camera_serial_no_2" default="" />
    <!-- body -->
    <arg name="camera_serial_no_3" default="047322070125" />
    <!-- for auto octomap update -->
    <!-- <arg name="sensors" default="[left_camera, right_camera, body_camera]"/> -->
    <arg name="sensors" default="[left_camera, body_camera]"/>

    <arg name="send_format" default="288" />
    <arg name="recv_format" default="292" />

    <arg name="bcap_slave_control_cycle_msec" default="8" />

    <arg name="gazebo_gui" default="true" />
    <arg name="rviz_gui" default="true" />
    <arg name="paused" default="true" />
    <arg name="debug" default="false" />
    <arg name="load_robot_description" default="true" />

    <arg name="fps" default="1"/>
    <arg name="wait_server" default="true" />
    <arg name="use_constraint" default="false" />
    <arg name="grasp_only" default="false" />

    <arg name="enable_auto_planning" default="true" />

    <arg name="db" default="false" />
    <arg name="db_path" default="$(find myrobot_v2_moveit_config)/default_warehouse_mongo_db" />

    <param name="fps" value="$(arg fps)"/>
    <rosparam param="sensors" subst_value="true">$(arg sensors)</rosparam>
    <param name="wait_server" value="$(arg wait_server)"/>
    <param name="use_constraint" value="$(arg use_constraint)"/>
    <param name="grasp_only" value="$(arg grasp_only)"/>

    <param name="image_topic" value="/$(arg robot_name)/left_camera/color/image_raw" />
    <param name="depth_topic" value="/$(arg robot_name)/left_camera/aligned_depth_to_color/image_raw" />
    <param name="points_topic" value="/$(arg robot_name)/left_camera/depth/color/points" />

    <!-- remap -->
    <remap from="/joint_states" to="/myrobot/joint_states" />

    <include file="$(find myrobot_v2_moveit_config)/launch/planning_context.launch">
        <arg name="load_robot_description" value="$(arg load_robot_description)" />
        <!-- <arg name="robot_name" value="$(arg robot_name)" /> -->
    </include>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen" />

    <include file="$(find myrobot_v2_moveit_config)/launch/moveit_rviz.launch" if="$(arg rviz_gui)">
        <arg name="rviz_config" value="$(find myrobot_v2_moveit_config)/launch/moveit.rviz" />
    </include>

    <include file="$(find myrobot_v2_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)">
        <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
      </include>

    <group if="$(arg sim)">
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
            <param name="publish_frequency" type="double" value="125.0" />
            <rosparam param="source_list" subst_value="true">
                [/$(arg robot_name)/joint_states]
            </rosparam>
        </node>
        <include file="$(find myrobot_v2_moveit_config)/launch/move_group.launch">
            <arg name="controllers_config_file_path" value="$(find myrobot_v2_moveit_config)/config/ros_controllers.yaml"/>
            <arg name="sensors_config_file_path" value="$(find myrobot_v2_moveit_config)/config/custom_sensors_3d.yaml"/>
            <arg name="publish_monitored_planning_scene" value="true" />
            <arg name="allow_trajectory_execution" value="true" />
            <arg name="fake_execution" value="false" />
            <arg name="info" value="true" />
            <arg name="debug" value="$(arg debug)" />
        </include>
        <include file="$(find myrobot_v2_moveit_config)/launch/gazebo.launch">
            <arg name="paused" value="$(arg paused)" />
            <arg name="gazebo_gui" value="$(arg gazebo_gui)" />
            <arg name="urdf_path" value="$(arg urdf_path)" />
            <arg name="robot_name" value="$(arg robot_name)" />
            <arg name="world_path" value="$(arg world_path)" />
        </include>
    </group>
    <group unless="$(arg sim)">
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
            <param name="publish_frequency" type="double" value="125.0" />
            <rosparam param="source_list" subst_value="true">
                [/$(arg robot_name)/joint_states, /$(arg robot_name)/right_arm/joint_states, /$(arg robot_name)/left_arm/joint_states]
            </rosparam>
        </node>
        <include file="$(find myrobot_v2_moveit_config)/launch/move_group.launch">
            <arg name="controllers_config_file_path" value="$(find myrobot_moveit)/config/real_controllers.yaml"/>
            <arg name="sensors_config_file_path" value="$(find myrobot_v2_moveit_config)/config/custom_sensors_3d.yaml"/>
            <arg name="publish_monitored_planning_scene" value="true" />
            <arg name="allow_trajectory_execution" value="true" />
            <arg name="fake_execution" value="false" />
            <arg name="info" value="true" />
            <arg name="debug" value="$(arg debug)" />
        </include>
        <include file="$(find myrobot_moveit)/launch/custom_denso_robot_control.launch">
            <arg name="robot_name" value="$(arg robot_name)" />
            <arg name="ip_address_cart" value="$(arg ip_address_cart)" />
            <arg name="ip_address_right" value="$(arg ip_address_right)" />
            <arg name="ip_address_left" value="$(arg ip_address_left)" />
            <arg name="send_format" value="$(arg send_format)" />
            <arg name="recv_format" value="$(arg recv_format)" />
            <arg name="bcap_slave_control_cycle_msec" value="$(arg bcap_slave_control_cycle_msec)" />
        </include>
        <include file="$(find myrobot_moveit)/launch/multiple_rs_camera.launch" if="$(arg use_camera)">
            <arg name="robot_name" value="$(arg robot_name)" />
            <arg name="camera_serial_no_1" default="$(arg camera_serial_no_1)" />
            <arg name="camera_serial_no_2" default="$(arg camera_serial_no_2)" />
            <arg name="camera_serial_no_3" default="$(arg camera_serial_no_3)" />
        </include>
    </group>

    
    <group if="$(arg enable_auto_planning)">
        <node name="auto_planner" pkg="myrobot_moveit" type="planning.py" output="screen"/>
    </group>
    <group unless="$(arg enable_auto_planning)">
        <node name="grasp_detection_client" pkg="myrobot_moveit" type="grasp_detection_client.py" />
        <node name="frequently_octomap_updater" pkg="myrobot_moveit" type="octomap_handler.py"/>            
    </group>

</launch>
