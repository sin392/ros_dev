FROM nvidia/cudagl:11.1.1-devel-ubuntu18.04
# ARG USER
# ENV USER ${USER}
ENV USER appuser
ENV HOME /home/${USER}
ENV ROS_WORKSPACE ${HOME}/catkin_ws
ENV PASS password
# ENV ROBOT_MODEL_NAME VS060A3-AV6-W4N-ANN

ENV DEBIAN_FRONTEND=noninteractive

# ref: https://tech-blog.optim.co.jp/entry/2022/05/18/100000
RUN rm -f /etc/apt/sources.list.d/cuda.list \
    && apt-get update && apt-get install -y --no-install-recommends \
        wget \
    && wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-keyring_1.0-1_all.deb \
    && dpkg -i cuda-keyring_1.0-1_all.deb \
    && rm -f cuda-keyring_1.0-1_all.deb

RUN apt-get install -y \
    ca-certificates git wget sudo ninja-build software-properties-common \
	iputils-ping net-tools netcat lsb-release vim tmux v4l-utils

RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

RUN apt-key adv --keyserver keys.gnupg.net --recv-key C8B3A55A6F3EFCDE || apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key C8B3A55A6F3EFCDE
RUN add-apt-repository "deb https://librealsense.intel.com/Debian/apt-repo $(lsb_release -cs) main" -u

RUN apt update
RUN apt-get install -y --allow-downgrades --allow-remove-essential --allow-change-held-packages \
	libpcap-dev libopenblas-dev \
	gstreamer1.0-tools libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-good1.0-dev \
	ros-melodic-desktop-full python-rosdep python-rosinstall-generator python-vcstool build-essential \
	python-catkin-tools

RUN apt-get install -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" \
    ros-melodic-ros-tutorials \
    ros-melodic-rqt ros-melodic-rqt-common-plugins \
    ros-melodic-rviz \
    ros-melodic-rviz-visual-tools \
    ros-melodic-ros-control ros-melodic-ros-controllers \ 
    ros-melodic-moveit \
    ros-melodic-moveit-visual-tools \
    ros-melodic-gazebo-ros-pkgs ros-melodic-gazebo-ros-control \
    ros-melodic-robot-state-publisher \
    ros-melodic-joint-state-publisher \
    ros-melodic-joint-state-publisher-gui \
    ros-melodic-image-* \
    ros-melodic-rqt-image-view \
    # ros-melodic-usb-cam \
    ros-melodic-uvc-camera \
    librealsense2-dkms \
    librealsense2-utils \
    librealsense2-dev \
    librealsense2-dbg \
    ros-melodic-librealsense2 \
    ros-melodic-librealsense2-dbgsym \
    ros-melodic-realsense2-camera \
    ros-melodic-realsense2-camera-dbgsym \
    # use extended repogitory for gazebo instead of following
    ros-melodic-realsense2-description \
    ros-melodic-franka-description \
    ros-melodic-timed-roslaunch \
    ros-melodic-mongodb-store \
    ros-melodic-warehouse-ros-mongo

RUN mkdir -p ${ROS_WORKSPACE}/src
# RUN git clone -b melodic-devel https://github.com/DENSORobot/denso_robot_ros.git ${HOME}/catkin_ws/src
# RUN git clone https://github.com/ros/urdf_tutorial.git ${HOME}/catkin_ws/src/urdf_tutorial
# RUN git clone https://github.com/osrf/gazebo_models ${HOME}/.gazebo/models
# RUN sed -i s/VS060A3-AV6-NNN-NNN/${ROBOT_MODEL_NAME}/ ${HOME}/catkin_ws/src/denso_robot_descriptions/vs060_description/vs060.launch.xml
# gazebo起動時のRESTエラー回避
# RUN sed -i s/fuel/robotics/ ${HOME}/.ignition/fuel/config.yaml

RUN touch ${HOME}/.bashrc
# Configure ROS
RUN echo "source /opt/ros/melodic/setup.bash" >> ${HOME}/.bashrc
RUN echo "export ROSLAUNCH_SSH_UNKNOWN=1" >> ${HOME}/.bashrc
RUN echo "set +e" >> ${HOME}/.bashrc

WORKDIR ${ROS_WORKSPACE}
RUN /bin/bash -c "source /opt/ros/melodic/setup.bash; catkin build"

RUN echo "export ROS_PACKAGE_PATH=\${ROS_PACKAGE_PATH}:${ROS_WORKSPACE}" >> ${HOME}/.bashrc
RUN echo "export ROS_IP=\$(hostname -i)" >> ${HOME}/.bashrc
RUN echo "source \${ROS_WORKSPACE}/devel/setup.bash" >> ${HOME}/.bashrc
RUN echo "export PYTHONPATH=\${ROS_WORKSPACE}/devel/lib/python3/dist-packages:\${PYTHONPATH}" >> ${HOME}/.bashrc

RUN useradd -s /bin/bash ${USER}
RUN usermod -d ${HOME} ${USER}
RUN gpasswd -a ${USER} sudo
RUN chown -R ${USER} ${HOME}
RUN echo "${USER}:${PASS}" | chpasswd
# /dev/video0のPermission Denied回避
RUN usermod -aG sudo,video ${USER}

# ↓/lib/udev/rules.d/60-librealsense2-udev-rules.rulesと重複するようになったのでコメントアウト
# realsenseが読み込めない問題の回避
# ref: https://github.com/IntelRealSense/realsense-ros/issues/1408
# RUN wget https://github.com/IntelRealSense/librealsense/blob/master/config/99-realsense-libusb.rules -P /etc/udev/rules.d

# RUN mkdir -p ${HOME}/.gazebo/models
# COPY ./models/ ${HOME}/.gazebo/models/
# RUN chmod 777 ${HOME}/.gazebo

# gazebo起動後に生成される設定ファイルのURLエラー回避
RUN  mkdir -p ${HOME}/.ignition/fuel
COPY ./configs/ignition_robotics/config.yaml ${HOME}/.ignition/fuel/

USER ${USER}
WORKDIR ${ROS_WORKSPACE}

